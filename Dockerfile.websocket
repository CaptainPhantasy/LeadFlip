# Dockerfile for LeadFlip WebSocket Server
# Handles Twilio <-> OpenAI Realtime API audio streaming
# MUST be deployed on persistent infrastructure (Railway/Fly.io), NOT Vercel

FROM node:20-alpine AS base

# Install dependencies for native modules
RUN apk add --no-cache libc6-compat python3 make g++

WORKDIR /app

# Copy package files
COPY package.json package-lock.json ./
COPY tsconfig.websocket.json ./

# Install dependencies
RUN npm ci --only=production && \
    npm cache clean --force

# Copy all source files (needed for path aliases to work)
COPY src/ ./src/

# Install TypeScript and build dependencies
RUN npm install -D typescript @types/node @types/ws

# Build TypeScript using tsconfig.websocket.json
RUN npx tsc --project tsconfig.websocket.json

# Production stage
FROM node:20-alpine AS production

WORKDIR /app

# Copy production dependencies from base
COPY --from=base /app/node_modules ./node_modules
COPY --from=base /app/dist ./dist
COPY --from=base /app/package.json ./

# Create non-root user for security
RUN addgroup -g 1001 -S nodejs && \
    adduser -S nodejs -u 1001

USER nodejs

# Expose WebSocket port
EXPOSE 8080

# Health check
HEALTHCHECK --interval=30s --timeout=5s --start-period=10s --retries=3 \
    CMD wget -q --spider http://localhost:8080/health || exit 1

# Start WebSocket server
CMD ["node", "dist/server/websocket-server.js"]
