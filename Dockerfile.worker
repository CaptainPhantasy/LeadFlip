# Dockerfile for LeadFlip BullMQ Call Worker
# Processes call initiation jobs from Redis queue
# MUST be deployed on persistent infrastructure (Railway/Fly.io), NOT Vercel

FROM node:20-alpine AS base

# Install dependencies for native modules
RUN apk add --no-cache libc6-compat python3 make g++

WORKDIR /app

# Copy package files
COPY package.json package-lock.json ./
COPY tsconfig.json ./

# Install dependencies
RUN npm ci --only=production && \
    npm cache clean --force

# Copy source files needed for worker
COPY src/server/workers/call-worker.ts ./src/server/workers/
COPY src/server/queue/config.ts ./src/server/queue/
COPY src/types/ ./src/types/

# Install TypeScript and build dependencies
RUN npm install -D typescript @types/node

# Build TypeScript
RUN npx tsc --outDir dist --esModuleInterop --resolveJsonModule --skipLibCheck \
    src/server/workers/call-worker.ts

# Production stage
FROM node:20-alpine AS production

WORKDIR /app

# Copy production dependencies from base
COPY --from=base /app/node_modules ./node_modules
COPY --from=base /app/dist ./dist
COPY --from=base /app/package.json ./

# Create non-root user for security
RUN addgroup -g 1001 -S nodejs && \
    adduser -S nodejs -u 1001

USER nodejs

# Worker doesn't expose ports (consumes from queue)
# But we can add a health check endpoint if needed

# Health check via queue connection
HEALTHCHECK --interval=60s --timeout=5s --start-period=30s --retries=3 \
    CMD pgrep -f "node dist/server/workers/call-worker.js" || exit 1

# Start BullMQ worker
CMD ["node", "dist/server/workers/call-worker.js"]
